{"version":3,"sources":["stores/UserStore.js","components/InputField.js","components/CustomBtn.js","components/LoginForm.js","components/EditBtn.js","components/ProfilePage.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","props","state","className","type","placeholder","value","onChange","e","target","PureComponent","StyledButton","withStyles","root","height","width","padding","margin","boxSizing","borderRadius","background","color","transform","boxShadow","transition","backgroundColor","label","textTransform","Button","CustomBtn","variant","disabled","onClick","txt","LoginForm","password","buttonDisabled","property","val","trim","length","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","StyledIcon","display","alignItem","justifyContent","IconButton","EditBtn","text","useState","setCount","theme","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","h4","fontWeight","fontSize","lineHeight","h5","App","ThemeProvider","href","rel","doLogout","React","Component","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32f4b4c2.chunk.js","sourcesContent":["import { extendObservable } from 'mobx'\r\n\r\n/**\r\n * UserStore\r\n */\r\nclass UserStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: ''\r\n        })\r\n    }\r\n}\r\n\r\nexport default new UserStore();","import React, { PureComponent } from 'react'\r\n\r\nclass InputField extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"inputField\">\r\n                <input\r\n                    className='input'\r\n                    type={this.props.type}\r\n                    placeholder={this.props.placeholder}\r\n                    value={this.props.value}\r\n                    onChange={ (e) => this.props.onChange(e.target.value) }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputField","import React from 'react'\r\nimport {Button} from '@material-ui/core'\r\nimport {withStyles} from '@material-ui/core/styles'\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        //display: \"flex\",\r\n        //alignItem: \"center\",\r\n        //justifyContent: \"center\",\r\n        height: \"44px\",\r\n        width: \"200px\",\r\n        padding: \"0 25px\",\r\n        margin: \"15px 25px\",\r\n        boxSizing: \"border-box\",\r\n        borderRadius: 0,\r\n        background: \"#4f25f7\",\r\n        color: \"#fff\",\r\n        transform: \"none\",\r\n        boxShadow: \"6px 6px 0 0 #c7d8ed\",\r\n        transition: \"background .5s,border-color .5s,color .5s\",\r\n        \"&:hover\": {\r\n            transition: \".5s\",\r\n            backgroundColor: \"#4f25f7\"\r\n        },\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Button);\r\n\r\nfunction CustomBtn(props) {\r\n    return (\r\n        <StyledButton \r\n            variant=\"contained\"\r\n            disabled={props.disabled}\r\n            onClick={ () => props.onClick() }\r\n        >\r\n            {props.txt}\r\n        </StyledButton>\r\n    )\r\n}\r\n\r\nexport default CustomBtn\r\n","import React, { PureComponent } from 'react'\r\nimport InputField from './InputField'\r\nimport CustomBtn from './CustomBtn'\r\nimport UserStore from '../stores/UserStore'\r\n\r\nclass LoginForm extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        val = val.trim();\r\n        if (val.length > 20) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: '',\r\n            password: '',\r\n            buttonDisabled: false\r\n        })\r\n    }\r\n\r\n    async doLogin() {\r\n        if (!this.state.username) {\r\n            return;\r\n        }\r\n        if (!this.state.password) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            buttonDisabled: true\r\n        })\r\n\r\n        try {\r\n            let res = await fetch('/login', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n            if (result && result.success) {\r\n                UserStore.isLoggedIn = true;\r\n                UserStore.username = result.username;\r\n            }\r\n            else if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.resetForm();\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loginForm\">\r\n                <h1>\r\n                    Teepee.io\r\n                </h1>\r\n                <InputField\r\n                    type='text'\r\n                    placeholder='Username'\r\n                    value={this.state.username ? this.state.username : ''}\r\n                    onChange={ (val) => this.setInputValue('username', val) }\r\n                />\r\n                <InputField\r\n                    type='password'\r\n                    placeholder='Password'\r\n                    value={this.state.password ? this.state.password : ''}\r\n                    onChange={ (val) => this.setInputValue('password', val) }\r\n                />\r\n                <CustomBtn \r\n                    txt='Login'\r\n                    disabled={this.state.buttonDisabled}\r\n                    onClick={ () => this.doLogin() }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport {IconButton} from '@material-ui/core';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport { useState } from 'react';\r\n\r\nconst StyledIcon = withStyles ({\r\n    root: {\r\n        display: \"flex\",\r\n        alignItem: \"center\",\r\n        justifyContent: \"center\",\r\n        height: \"44px\",\r\n        width: \"44px\",\r\n        background: \"#4f25f7\",\r\n        color: \"#fff\",\r\n        transform: \"none\",\r\n        boxShadow: \"6px 6px 0 0 #c7d8ed\",\r\n        transition: \"background .5s,border-color .5s,color .5s\",\r\n        \"&:hover\": {\r\n            transition: \".5s\",\r\n            backgroundColor: \"#4f25f7\",\r\n            boxShadow: \"0 0 0 0\",\r\n        },\r\n    },\r\n})(IconButton)\r\n\r\nfunction EditBtn() {\r\n    const [state, setCount] = useState(true);\r\n    var text;\r\n\r\n    if(state === true)\r\n        text = \"ON\";\r\n    else text = \"OFF\";\r\n\r\n    return (\r\n        <div>\r\n            <p>{text}</p>\r\n            <StyledIcon onClick={() => setCount(!state)}>\r\n                <EditIcon />\r\n            </StyledIcon>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditBtn\r\n","import React, { PureComponent } from 'react'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport UserStore from '../stores/UserStore';\r\nimport CustomBtn from './CustomBtn'\r\nimport EditBtn from './EditBtn'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main:\"#2e1667\",\r\n      },\r\n      secondary: {\r\n        main:\"#c7d8ed\",\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily: [\r\n        'Roboto'\r\n      ],\r\n      h4: {\r\n        fontWeight: 600,\r\n        fontSize: 28,\r\n        lineHeight: '2rem',\r\n      },\r\n      h5: {\r\n        fontWeight: 100,\r\n        lineHeight: '2rem',\r\n      },\r\n    },\r\n  })\r\n\r\nclass ProfilePage extends PureComponent {\r\n\r\n    async componentDidMount() {\r\n    \r\n        try{\r\n          let res = await fetch('/isLoggedIn', {\r\n            method: 'post',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n    \r\n          let result = await res.json();\r\n    \r\n          if (result && result.success) {\r\n            UserStore.loading = false;\r\n            UserStore.isLoggedIn = true;\r\n            UserStore.username = result.username;\r\n          } else {\r\n            UserStore.loading = false;\r\n            UserStore.isLoggedIn = false;\r\n          }\r\n        } catch (e) {\r\n          UserStore.loading = false;\r\n          UserStore.isLoggedIn = false;\r\n        }\r\n      }\r\n\r\n    async doLogout() {\r\n    \r\n        try{\r\n          let res = await fetch('/logout', {\r\n            method: 'post',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            }\r\n          });\r\n    \r\n          let result = await res.json();\r\n    \r\n          if (result && result.success) {\r\n            UserStore.isLoggedIn = false;\r\n            UserStore.username = '';\r\n          } \r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n\r\n    render() {\r\n        if(UserStore.isLoggedIn){\r\n        return (\r\n            <div className=\"profilePage\">\r\n                <h1>Brian Burciaga</h1>\r\n                <ThemeProvider theme={theme}>\r\n                    <a href=\"https://www.instagram.com/brian_asiago/\" rel=\"noopener noreferrer\">\r\n                        <CustomBtn txt=\"Instagram\"/>\r\n                    </a>\r\n                    <a href=\"https://twitter.com/TheBrianAsiago\" rel=\"noopener noreferrer\">\r\n                        <CustomBtn txt=\"Twitter\"/>\r\n                    </a>\r\n                    <a href=\"https://www.linkedin.com/feed/\" rel=\"noopener noreferrer\">\r\n                        <CustomBtn txt=\"LinkedIn\"/>\r\n                    </a>\r\n                </ThemeProvider>\r\n                <footer>\r\n                    <CustomBtn \r\n                        txt={'Log out'}\r\n                        disabled={false}\r\n                        onClick={() => this.doLogout() }\r\n                        />\r\n                    <EditBtn />\r\n                </footer> \r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProfilePage","import './App.css';\nimport React, { /*useState*/ } from 'react';\nimport { observer } from 'mobx-react';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './components/LoginForm';\nimport ProfilePage from './components/ProfilePage';\n\n\nimport CustomBtn from './components/CustomBtn'\nimport EditBtn from './components/EditBtn'\n\n/* Admin */\n/*\nimport { Admin, Resource } from 'react-admin';\nimport { PostList, PostEdit, PostCreate } from './components/Posts';\nimport { UserList } from './components/Users';\n\nimport Dashboard from './components/Dashboard';\nimport jsonServerProvider from 'ra-data-json-server';\n\n\n/* Admin */\n/*\nconst dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com');\nconst App = () => (\n  <Admin dashboard={Dashboard} dataProvider={dataProvider}>\n    <Resource name=\"posts\" list={PostList} edit={PostEdit} create={PostCreate} />\n    <Resource name=\"users\" list={UserList} />\n  </Admin>\n);\n\n\n\n*/\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main:\"#2e1667\",\n    },\n    secondary: {\n      main:\"#c7d8ed\",\n    },\n  },\n  typography: {\n    fontFamily: [\n      'Roboto'\n    ],\n    h4: {\n      fontWeight: 600,\n      fontSize: 28,\n      lineHeight: '2rem',\n    },\n    h5: {\n      fontWeight: 100,\n      lineHeight: '2rem',\n    },\n  },\n})\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n    \n    try{\n      let res = await fetch('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    \n    try{\n      let res = await fetch('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = '';\n      } \n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n\n    if (UserStore.loading) {\n\n      return (\n        <div className=\"App\">\n          Loading, please wait..\n        </div>\n      );\n\n    } else {\n\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"App\">\n            <h1>Brian Burciaga</h1>\n            <ThemeProvider theme={theme}>\n              <a href=\"https://www.instagram.com/brian_asiago/\" rel=\"noopener noreferrer\">\n                <CustomBtn txt=\"Instagram\"/>\n              </a>\n              <a href=\"https://twitter.com/TheBrianAsiago\" rel=\"noopener noreferrer\">\n                <CustomBtn txt=\"Twitter\"/>\n              </a>\n              <a href=\"https://www.linkedin.com/feed/\" rel=\"noopener noreferrer\">\n                <CustomBtn txt=\"LinkedIn\"/>\n              </a>\n            </ThemeProvider>\n            <footer>\n              <CustomBtn \n                txt={'Log out'}\n                disabled={false}\n                onClick={() => this.doLogout() }\n                />\n              <EditBtn />\n            </footer>\n          </div>\n        );\n      }\n      else {\n        return (\n          <div className=\"App\">\n            <LoginForm />\n          </div>\n        );\n      }\n      \n    }\n\n  }\n    \n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}